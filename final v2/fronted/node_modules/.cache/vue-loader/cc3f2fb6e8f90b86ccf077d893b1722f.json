{"remainingRequest":"/Users/lrlbabee/Desktop/CUC/大三下/结课/数据可视化/doob-business-and-consulting-vue-js-template/doob/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/lrlbabee/Desktop/CUC/大三下/结课/数据可视化/doob-business-and-consulting-vue-js-template/doob/src/components/elements/counterUp/Counter.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/lrlbabee/Desktop/CUC/大三下/结课/数据可视化/doob-business-and-consulting-vue-js-template/doob/src/components/elements/counterUp/Counter.vue","mtime":1642515942000},{"path":"/Users/lrlbabee/Desktop/CUC/大三下/结课/数据可视化/doob-business-and-consulting-vue-js-template/doob/node_modules/cache-loader/dist/cjs.js","mtime":1686702247989},{"path":"/Users/lrlbabee/Desktop/CUC/大三下/结课/数据可视化/doob-business-and-consulting-vue-js-template/doob/node_modules/babel-loader/lib/index.js","mtime":1686702243633},{"path":"/Users/lrlbabee/Desktop/CUC/大三下/结课/数据可视化/doob-business-and-consulting-vue-js-template/doob/node_modules/cache-loader/dist/cjs.js","mtime":1686702247989},{"path":"/Users/lrlbabee/Desktop/CUC/大三下/结课/数据可视化/doob-business-and-consulting-vue-js-template/doob/node_modules/vue-loader/lib/index.js","mtime":1686702243693}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogICAgaW1wb3J0IFZpc2liaWxpdHlTZW5zb3IgZnJvbSAndnVlLXZpc2liaWxpdHktc2Vuc29yJw0KICAgIGltcG9ydCBjb3VudFRvIGZyb20gJ3Z1ZS1jb3VudC10bycNCg0KICAgIGV4cG9ydCBkZWZhdWx0IHsNCiAgICAgICAgbmFtZTogJ0NvdW50ZXInLA0KICAgICAgICBjb21wb25lbnRzOiB7VmlzaWJpbGl0eVNlbnNvciwgY291bnRUb30sDQogICAgICAgIHByb3BzOiB7DQogICAgICAgICAgICBjb2x1bW46IHt9LA0KICAgICAgICAgICAgY291bnRlckRhdGE6IHt9LA0KICAgICAgICAgICAgY291bnRlclN0eWxlOiB7DQogICAgICAgICAgICAgICAgdHlwZTogTnVtYmVyLA0KICAgICAgICAgICAgICAgIGRlZmF1bHQ6IDENCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB0ZXh0QWxpZ246IHsNCiAgICAgICAgICAgICAgICB0eXBlOiBTdHJpbmcsDQogICAgICAgICAgICAgICAgZGVmYXVsdDogJ2xlZnQnDQogICAgICAgICAgICB9DQogICAgICAgIH0sDQogICAgICAgIGRhdGEoKSB7DQogICAgICAgICAgICByZXR1cm4gew0KICAgICAgICAgICAgICAgIGNvdW50VXA6IHRydWUsDQogICAgICAgICAgICAgICAgc3RhdHVzOiBmYWxzZQ0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBjb21wdXRlZDogew0KICAgICAgICAgICAgY2hlY2tUZXh0QWxpZ24oKSB7DQogICAgICAgICAgICAgICAgaWYgKHRoaXMudGV4dEFsaWduID09PSAnbGVmdCcpIHJldHVybiAndGV4dC1zdGFydCc7DQogICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy50ZXh0QWxpZ24gPT09ICdjZW50ZXInKSByZXR1cm4gJ3RleHQtY2VudGVyJzsNCiAgICAgICAgICAgICAgICBlbHNlIGlmICh0aGlzLnRleHRBbGlnbiA9PT0gJ2VuZCcpIHJldHVybiAndGV4dC1lbmQnOw0KICAgICAgICAgICAgICAgIGVsc2UgcmV0dXJuICcnOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBtZXRob2RzOiB7DQogICAgICAgICAgICBvbkNoYW5nZShpc1Zpc2libGUpIHsNCiAgICAgICAgICAgICAgICBpZiAoaXNWaXNpYmxlKSB7DQogICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdHVzID0gdHJ1ZTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQo="},{"version":3,"sources":["Counter.vue"],"names":[],"mappings":";AAqGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Counter.vue","sourceRoot":"src/components/elements/counterUp","sourcesContent":["<template>\r\n    <div v-if=\"counterStyle === 1\" class=\"row\">\r\n        <div :class=\"`${column}`\"\r\n             v-for=\"(counter, index) in counterData\"\r\n             :key=\"index\">\r\n            <div :class=\"`count-box counter-style-1 ${checkTextAlign}`\">\r\n                <VisibilitySensor @change=\"onChange\">\r\n                    <div class=\"count-number\">\r\n                        <countTo\r\n                            :endVal=\"status ? counter.number : 0\"\r\n                            :autoplay=\"countUp\"\r\n                            :duration=\"3000\"\r\n                        />\r\n                    </div>\r\n                </VisibilitySensor>\r\n                <h5 class=\"title\">{{ counter.title }}</h5>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"counterStyle === 2\" class=\"row\">\r\n        <div :class=\"`${column}`\"\r\n             v-for=\"(counter, index) in counterData\"\r\n             :key=\"index\">\r\n            <div :class=\"`count-box counter-style-2 ${checkTextAlign}`\">\r\n                <VisibilitySensor @change=\"onChange\">\r\n                    <div class=\"count-number\">\r\n                        <countTo\r\n                            :endVal=\"status ? counter.number : 0\"\r\n                            :autoplay=\"countUp\"\r\n                            :duration=\"3000\"\r\n                        />\r\n                    </div>\r\n                </VisibilitySensor>\r\n                <h5 class=\"title\">{{ counter.title }}</h5>\r\n                <p class=\"description\">{{ counter.description }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"counterStyle === 3\" class=\"row\">\r\n        <div :class=\"`${column}`\"\r\n             v-for=\"(counter, index) in counterData\"\r\n             :key=\"index\">\r\n            <div :class=\"`count-box counter-style-2 color-variation ${checkTextAlign}`\">\r\n                <VisibilitySensor @change=\"onChange\">\r\n                    <div class=\"count-number\">\r\n                        <countTo\r\n                            :endVal=\"status ? counter.number : 0\"\r\n                            :autoplay=\"countUp\"\r\n                            :duration=\"3000\"\r\n                        />\r\n                    </div>\r\n                </VisibilitySensor>\r\n                <h5 class=\"title\">{{ counter.title }}</h5>\r\n                <p class=\"description\">{{ counter.description }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"counterStyle === 4\" class=\"row\">\r\n        <div :class=\"`${column}`\"\r\n             v-for=\"(counter, index) in counterData\"\r\n             :key=\"index\">\r\n            <div :class=\"`count-box counter-style-2 border-style ${checkTextAlign}`\">\r\n                <VisibilitySensor @change=\"onChange\">\r\n                    <div class=\"count-number\">\r\n                        <countTo\r\n                            :endVal=\"status ? counter.number : 0\"\r\n                            :autoplay=\"countUp\"\r\n                            :duration=\"3000\"\r\n                        />\r\n                    </div>\r\n                </VisibilitySensor>\r\n                <h5 class=\"title\">{{ counter.title }}</h5>\r\n                <p class=\"description\">{{ counter.description }}</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div v-else-if=\"counterStyle === 5\" class=\"row\">\r\n        <div :class=\"`${column}`\"\r\n             v-for=\"(counter, index) in counterData\"\r\n             :key=\"index\">\r\n            <div :class=\"`count-box counter-style-4 ${checkTextAlign}`\">\r\n                <VisibilitySensor @change=\"onChange\">\r\n                    <div class=\"count-number\">\r\n                        <countTo\r\n                            :endVal=\"status ? counter.number : 0\"\r\n                            :autoplay=\"countUp\"\r\n                            :duration=\"3000\"\r\n                        />\r\n                    </div>\r\n                </VisibilitySensor>\r\n                <h5 class=\"counter-title\">{{ counter.title }}</h5>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import VisibilitySensor from 'vue-visibility-sensor'\r\n    import countTo from 'vue-count-to'\r\n\r\n    export default {\r\n        name: 'Counter',\r\n        components: {VisibilitySensor, countTo},\r\n        props: {\r\n            column: {},\r\n            counterData: {},\r\n            counterStyle: {\r\n                type: Number,\r\n                default: 1\r\n            },\r\n            textAlign: {\r\n                type: String,\r\n                default: 'left'\r\n            }\r\n        },\r\n        data() {\r\n            return {\r\n                countUp: true,\r\n                status: false\r\n            }\r\n        },\r\n        computed: {\r\n            checkTextAlign() {\r\n                if (this.textAlign === 'left') return 'text-start';\r\n                else if (this.textAlign === 'center') return 'text-center';\r\n                else if (this.textAlign === 'end') return 'text-end';\r\n                else return '';\r\n            }\r\n        },\r\n        methods: {\r\n            onChange(isVisible) {\r\n                if (isVisible) {\r\n                    this.status = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>"]}]}